kind: pipeline
type: docker
name: build
steps:

- name: build docker image
  image: docker:latest
  volumes:
    - name: docker_sock
      path: /var/run/docker.sock
  environment:
    USERNAME:
      from_secret: docker_username
    PASSWORD:
      from_secret: docker_password
  commands:
    - docker build --no-cache -t moderras/telegramsearchbot -f Dockerfile .
    - docker login -u $USERNAME -p $PASSWORD
    - docker push moderras/telegramsearchbot

- name: ssh_production
  image: appleboy/drone-ssh
  environment:
    TARGET_LOCALE: 
      from_secret: target_locale
  settings:
    host:
      from_secret: ssh_ip
    username: 
      from_secret: ssh_username
    password:
      from_secret: ssh_password
    port:
      from_secret: ssh_port
    command_timeout: 120
    command_timeout: 2m
    script:
      - docker pull moderras/telegramsearchbot
      - cd /home/TelegramSearchBot
      - docker-compose up -d
- name: send telegram notification
  image: appleboy/drone-telegram
  settings:
    token: 
      from_secret: bot_token
    to: 
      from_secret: userid
    message: >
      {{#success build.status}}
         Telegram Search Bot build {{build.number}} succeeded. Good job.
      {{else}}
        build {{build.number}} failed. Fix me please.
      {{/success}}
- name: Production Server Clean Useless Docker Images
  image: appleboy/drone-ssh
  settings:
    host:
      from_secret: ssh_ip
    username: 
      from_secret: ssh_username
    password:
      from_secret: ssh_password
    port:
      from_secret: ssh_port
    command_timeout: 120
    command_timeout: 2m
    script:
      - docker ps -a | grep "Exited" | awk '{print $1 }'|xargs docker stop
      - docker ps -a | grep "Exited" | awk '{print $1 }'|xargs docker rm
      - docker images|grep none|awk '{print $3 }'|xargs docker rmi
trigger:
  branch:
  - master
volumes:
- name: cache
  temp: {}
- name: docker_sock
  host:
    path: /var/run/docker.sock
